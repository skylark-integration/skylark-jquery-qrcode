{"version":3,"sources":["QRBitBuffer.js"],"names":["define","QRBitBuffer","this","buffer","Array","length","prototype","get","index","bufIndex","Math","floor","put","num","i","putBit","getLengthInBits","bit","push"],"mappings":";;;;;;;AAAAA,UAAU,WAKT,SAASC,IACRC,KAAKC,OAAS,IAAIC,MAClBF,KAAKG,OAAS,EAmCf,OAhCAJ,EAAYK,WAEXC,IAAM,SAASC,GACd,IAAIC,EAAWC,KAAKC,MAAMH,EAAQ,GAClC,OAA8D,IAApDN,KAAKC,OAAOM,KAAe,EAAID,EAAQ,EAAO,IAGzDI,IAAM,SAASC,EAAKR,GACnB,IAAK,IAAIS,EAAI,EAAGA,EAAIT,EAAQS,IAC3BZ,KAAKa,OAA8C,IAAnCF,IAASR,EAASS,EAAI,EAAO,KAI/CE,gBAAkB,WACjB,OAAOd,KAAKG,QAGbU,OAAS,SAASE,GAEjB,IAAIR,EAAWC,KAAKC,MAAMT,KAAKG,OAAS,GACpCH,KAAKC,OAAOE,QAAUI,GACzBP,KAAKC,OAAOe,KAAK,GAGdD,IACHf,KAAKC,OAAOM,IAAc,MAAUP,KAAKG,OAAS,GAGnDH,KAAKG,WAIAJ","file":"../QRBitBuffer.js","sourcesContent":["define([],function(){\r\n\t//---------------------------------------------------------------------\r\n\t// QRBitBuffer\r\n\t//---------------------------------------------------------------------\r\n\r\n\tfunction QRBitBuffer() {\r\n\t\tthis.buffer = new Array();\r\n\t\tthis.length = 0;\r\n\t}\r\n\r\n\tQRBitBuffer.prototype = {\r\n\r\n\t\tget : function(index) {\r\n\t\t\tvar bufIndex = Math.floor(index / 8);\r\n\t\t\treturn ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\r\n\t\t},\r\n\t\t\r\n\t\tput : function(num, length) {\r\n\t\t\tfor (var i = 0; i < length; i++) {\r\n\t\t\t\tthis.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tgetLengthInBits : function() {\r\n\t\t\treturn this.length;\r\n\t\t},\r\n\t\t\r\n\t\tputBit : function(bit) {\r\n\t\t\r\n\t\t\tvar bufIndex = Math.floor(this.length / 8);\r\n\t\t\tif (this.buffer.length <= bufIndex) {\r\n\t\t\t\tthis.buffer.push(0);\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (bit) {\r\n\t\t\t\tthis.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\r\n\t\t\t}\r\n\t\t\r\n\t\t\tthis.length++;\r\n\t\t}\r\n\t};\r\n\r\n\treturn QRBitBuffer;\r\n\r\n});"]}